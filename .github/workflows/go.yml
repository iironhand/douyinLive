name: Go Build Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  GO_VERSION: '1.23'
  APP_NAME: 'douyinLive's
  BUILD_ID: ${{ github.run_id }}-${{ github.run_attempt }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.setup.outputs.timestamp }}
    steps:
      - name: Generate Build Metadata
        id: setup
        run: |
          TIMESTAMP=$(date -u +'%Y%m%dT%H%M%SZ')
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT

  build-windows-amd64:
    needs: setup
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          GOOS=windows GOARCH=amd64 go build -o ${{ env.APP_NAME }}-windows-amd64-${{ needs.setup.outputs.timestamp }}.exe
      - uses: actions/upload-artifact@v4
        with:
          name: windows-amd64-bin
          path: ${{ env.APP_NAME }}-windows-amd64-${{ needs.setup.outputs.timestamp }}.exe

  build-linux-arm64:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          GOOS=linux GOARCH=arm64 go build -o ${{ env.APP_NAME }}-linux-arm64-${{ needs.setup.outputs.timestamp }}
          chmod +x ${{ env.APP_NAME }}-linux-arm64-${{ needs.setup.outputs.timestamp }}
      - uses: actions/upload-artifact@v4
        with:
          name: linux-arm64-bin
          path: ${{ env.APP_NAME }}-linux-arm64-${{ needs.setup.outputs.timestamp }}

  build-darwin-universal:
    needs: setup
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
      - run: |
          go build -o ${{ env.APP_NAME }}-darwin-universal-${{ needs.setup.outputs.timestamp }}
          chmod +x ${{ env.APP_NAME }}-darwin-universal-${{ needs.setup.outputs.timestamp }}
      - uses: actions/upload-artifact@v4
        with:
          name: darwin-universal-bin
          path: ${{ env.APP_NAME }}-darwin-universal-${{ needs.setup.outputs.timestamp }}

  deploy:
    needs:
      - build-windows-amd64
      - build-linux-arm64
      - build-darwin-universal
    runs-on: ubuntu-latest
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare Release Bundle
        run: |
          mkdir release-${{ env.BUILD_ID }}
          cp artifacts/*/* release-${{ env.BUILD_ID }}/
          tar czvf release-${{ env.BUILD_ID }}.tgz release-${{ env.BUILD_ID }}

      - uses: actions/upload-artifact@v4
        with:
          name: full-release
          path: release-${{ env.BUILD_ID }}.tgz
