name: Go Build & Release Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  GO_VERSION: '1.23'
  APP_NAME: 'douyinLive'
  BUILD_ID: ${{ github.run_id }}-${{ github.run_attempt }}

jobs:
  deploy:
    needs:
      - build-windows-amd64
      - build-linux-arm64
      - build-darwin-universal
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      RELEASE_NAME: "release-${{ vars.BUILD_ID }}"
      BUILD_ID: ${{ env.BUILD_ID }}  # 显式声明传递
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare Release Bundle
        env:
          BUILD_ID: ${{ vars.BUILD_ID }}  # 步骤级环境变量声明
        run: |
          # 使用双引号包裹变量防止空格问题
          mkdir -p "release-${BUILD_ID}"
          
          # 使用明确的路径引用
          cp -r artifacts/* "release-${BUILD_ID}/"
          
          # 生成带构建ID的校验文件
          sha256sum "release-${BUILD_ID}"/* > "checksum-${BUILD_ID}.txt"
          
          # 打包文件
          tar czvf "release-${BUILD_ID}.tgz" "release-${BUILD_ID}" "checksum-${BUILD_ID}.txt"

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "nightly-${{ vars.BUILD_ID }}"
          name: "Release ${{ vars.BUILD_ID }}"
          files: |
            release-${{ vars.BUILD_ID }}.tgz
